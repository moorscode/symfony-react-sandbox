version: "3.4"

services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./:/srv/app
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
      test: sh ./docker/php/docker-healthcheck.sh
    environment:
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$

  caddy:
    image: ${IMAGES_PREFIX:-}app-caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, caddy:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    expose:
      - 80
      - 443/tcp
      - 443/udp
    ports:
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp

  node1:
    build: docker/node
    restart: unless-stopped
    ports:
      - "3000:3000/tcp"
    environment:
      - PORT=3000
    volumes:
      - ./:/srv/app
    entrypoint: [ "sh", "-c", "node ./external-server.js" ]

  node2:
    build: docker/node
    restart: unless-stopped
    ports:
      - "3001:3001/tcp"
    environment:
      - PORT=3001
    volumes:
      - ./:/srv/app
    entrypoint: [ "sh", "-c", "node ./external-server.js" ]

  db:
    image: mysql:5.7
    platform: linux/amd64
    restart: always
    expose: [ 3306:3306 ]
    volumes:
      - mydb:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: 'sfreact'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'sfreact'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'sfreact'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'sfreact'

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  mydb:
  node_socket:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
