version: "3.8"

services:
  webserver:
    build:
      context: .
      target: caddy_base
    command: [ "caddy", "run", "--config", "/etc/caddy/Caddyfile", "--adapter", "caddyfile", "--watch" ]
    depends_on:
      - php
    networks:
      - default
      - ssr
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, caddy:80
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
      - ./public:/srv/app/public:ro
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    expose: [ 80 ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ssr.entrypoints=https"
      - "traefik.http.routers.ssr.rule=Host(`ssr.myofflinestore.com`)"
      - "traefik.http.routers.ssr.tls=true"
      - "traefik.http.routers.ssr.service=ssr"
      - "traefik.http.services.ssr.loadbalancer.server.port=80"

  php:
    build:
      context: .
      target: php_dev
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./:/srv/app
      - ./docker/php/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/app.dev.ini:ro

    networks:
      - ssr
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:host-gateway
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
      test: sh ./docker/php/docker-healthcheck.sh
    environment:
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
      # See https://xdebug.org/docs/all_settings#mode
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"

  node1:
    build: docker/node
    restart: unless-stopped
    ports:
      - "3000:3000/tcp"
    networks:
      - ssr
    environment:
      - PORT=3000
    volumes:
      - ./:/srv/app
    entrypoint: [ "sh", "-c", "node ./external-server.js" ]

  node2:
    build: docker/node
    restart: unless-stopped
    networks:
      - ssr
    ports:
      - "3001:3001/tcp"
    environment:
      - PORT=3001
    volumes:
      - ./:/srv/app
    entrypoint: [ "sh", "-c", "node ./external-server.js" ]

  db:
    image: mysql:5.7
    platform: linux/amd64
    restart: always
    networks:
      - ssr
    expose: [ 3306:3306 ]
    volumes:
      - mydb:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: 'sfreact'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'sfreact'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'sfreact'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'sfreact'

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  mydb:
  node_socket:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

networks:
  default:
    name: gateway
    external: true
  ssr:
