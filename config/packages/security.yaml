security:
  enable_authenticator_manager: true

  providers:
    in_memory:
      memory:
        users:
          nonadmin:
            password: nonadmin
            roles: 'ROLE_USER'
          admin:
            password: admin
            roles: 'ROLE_ADMIN'
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api_login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

    #        admin:
    #            pattern:   ^/admin/api
    #            stateless: true
    #            guard:
    #                authenticators:
    #                    - lexik_jwt_authentication.jwt_token_authenticator
    #
    #        admin_api:
    #            pattern:   ^/admin/api
    #            stateless: true
    #            guard:
    #                authenticators:
    #                    - lexik_jwt_authentication.jwt_token_authenticator
    admin_api:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login_check
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

  access_control:
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/admin, roles: IS_AUTHENTICATED_FULLY }
